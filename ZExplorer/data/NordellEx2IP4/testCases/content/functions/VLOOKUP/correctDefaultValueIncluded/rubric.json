{
	"Project": {
		"Name":"NordellEx2IP4",
		"Text":"Just some arbitrary text",
		"TotalPts":50,
		"Allocations": [
			{ "NCE": {
				"Pct":0.10,
				"Max":5,
				"PPE":0.50
			} },
			{ "EE": {
				"Pct":0.15,
				"Max":7.5,
				"PPE":1.0
			} },
			{ "LO": {
				"Pct":0.75,
				"Max":37.5,
				"PPE":1.50
			} }
		],
		"Preferences": {
			"SkillLevels":{"Enabled":true},
			"Coverages":{"Enabled":true},
			"Difficulties":{"Enabled":true},
			"Deductions":{"Enabled":true},
			"PartialCredit":{"Enabled":true},
			"Rounding":{"Enabled":true, "Factor":25 },
			"Content2": {
				"Typos":{"Enabled":true, "Threshold":1},
				"Expressions": {
					"AccuracyForRanges":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Inclusion of extraneous/empty cells in ranges should be avoided. Found range: '{0}' in expression: '{1}', does not match the requested range: '{2}'."
						}
					}
				}
			},
			"Content": {
				"Typos":{"Enabled":true, "Threshold":1},
				"Literal":
				[
					{"String":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Minor",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Requested literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for string literals as function output arguments."
					}}
				]
				,"AccuracyForRangeCopy":{
					"Enabled":true,
					"Deduction" : {
						"Type" : "Moderate",
						"Category" : "EE"
					},
					"Remediation": {
						"Category" : "EE",
						"Feedback" : "Incomplete copy of range. Partial copying of range, found content copied to: '{0}' instead of: '{1}'."
					}
				},
				"Expressions": {
					"AccuracyForRanges":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Inclusion of extraneous/empty cells in ranges should be avoided. Found range: '{0}' in expression: '{1}', does not match the requested range: '{2}'."
						}
					},
					"AllowDefaultValueEntry":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "None",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Specifying the {0} was not required, review {1}"
						},
						"Notes" : "How to treat entry of default values in functions when not requested to do so."
					},
					"AccuracyForNumericLiteralOutputValue":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Minor",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Requested literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for numeric literals as function output arguments. May need to define threshold."
					},
					"AccuracyForStringLiteralOutputValue":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Minor",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Requested literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for string literals as function output arguments."
					},
					"AccuracyForNumericLiteralInputArguments":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Requested numeric literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for numeric literals as input function arguments, provided resulting value is correct."
					},
					"AccuracyForStringLiteralInputArguments":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Requested string literal input value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for string literals as input function arguments, provided resulting value is correct."
					}
				}
			}
		},
		"Multipliers": {
			"SkillLevels": [
				{"Novice":1.0},
				{"Beginner":1.25},
				{"Intermediate":1.5},
				{"Advanced":1.75},
				{"Expert":2.0}
			],
			"Coverages": [
				{"Review":1.0},
				{"Normal":1.0}
			],
			"Difficulties": [
				{"Easy":   0.5},
				{"Normal":   1.0},
				{"Hard":   1.5},
				{"Challenging":   2.0}
			],
			"Deductions": [
				{"None": 0.0},
				{"Minor":0.25},
				{"Moderate":0.50},
				{"Major":0.75},
				{"Full":1.00}
			]
		}
	},
	"Keys": [
		{"placeHolder":null }
	],
	"Steps":
	[
		{	"02": {	
			"Name":"Step {ParentID}",
			"Key": "{ParentID}",
			"Text":"Create a VLOOKUP function to calculate the bonus amount for each employee.",
			"Tags":[
				{ "0" : ["Create a VLOOKUP function to calculate the bonus amount for each employee."]},
				{ "1" : ["a. Click the Employees sheet tab	, and 	select I4."]},
				{ "2" : ["b. Type a formula to reference the Base Monthly Salary amount as the lookup_value."]},
				{ "3" : ["c. Click the Bonus sheet tab for the table_array argument."]},
				{ "4" : ["d. Use the second column of the table for the col_index_num."]},
				{ "5" : ["e. Verify that the formula syntax is =VLOOKUP(H4,Bonus!A4:B8,2)."]}
			],
			"Tasks":
			[
				{	"a": {
					"Name":"{^Name}{ParentID}",
					"Text":"{^Text}",
					"Mapping":	{
						"Category":"LO",
						"Difficulty":"Hard",
						"Action":"Create"
					},
					"Target" : {
						"Text": "{^Text}",
						"Location": {
							"Type" : "Cell"
							,"Address" : "$I$4"
							,"TaggedAddress": ["///<{1,2}$I$4>///"]
							,"Context":"Employees"
							,"TaggedContext": ["///{1,0}Employees>///"]
						},
						"Type":"Content",
						"Property":"Formula"
					},
					"Answer": { 
						"Type": "{^Target.Type}",
						"LiteralValue":0.01,
						"Expression":"=VLOOKUP(H4,Bonus!$A$4:$B$8,2)",
						"BegExpression" : "{/Keys[{^Key}.End].Worksheets[{^Target.Location.Context}].Cells[{^Target.Location.Address}].{^Target.Type}.{^Target.Property}}"
						,"TaggedExpression":[ 
							"=///<{0}VLOOKUP(>///"
							,"///<{2}H4>///,"
							,"///<{3}Bonus!$A$4:$B$8>///,"
							,"///<{4}2>///)"
						]
					},
					"Scenarios" : 
					[
						{	"Name" : "SpecifiedRange_lookupIncorrectValue",
							"Answers" :
							[
								{	"Type": "{^Answer.Type}",
									"Expression" : "={^Args[Function].Expression}({^Args[Lookup_value].Expression},{^Args[Table_array].Expression},{^Args[Col_index_num].Expression},FALSE)"
								}
							],
							"Deduction" : {
								"Category" : "{^Mapping.Category}",
								"Type":"Moderate"
							},
							"Remediation": {
								"Category" : "{^Mapping.Category}",
								"Feedback" : "Specifying the Range_lookup was not required, incorrect Range_lookup value specified, review {^Args[Function].Expression}"
							},
							"Notes" : "May modify if correct value not produced."
						}
					]
				}}
			]
		}}

	]
}
