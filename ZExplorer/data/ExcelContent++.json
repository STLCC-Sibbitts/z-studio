/*
 * typos
 *     text - LD of 1 - neatness
 *     numeric values
 *     dates
 *	Call out the parts of the if
 */
{
   "Content" : [
	  { "Literal Values" : [
		{  "Text" : {
		   "Name" : "{^Name}",
		   "Text" : "{^Text}",
		   "Type" : "{^ParentName}",
		   "Property" : "Value",
		   "Value" : "{^Value}",
		   "Scenarios": [
		      { "Name":"Typo",
                "Type":"Neatness",
			    "Feedback":"Error type: {Name} while entering {^Type}, expected: '{^Value}', found: "
			  },
		      { "Name":"Data entry",
                "Type":"Accuracy",
			    "Feedback":"Error type: {Name} while entering {^Type}, expected: '{^Value}', found: "
			  }
			]
         } },
		{  "Number" : {
		   "Name" : "{^Name}",
		   "Text" : "{^Text}",
		   "Type" : "{^ParentName}",
		   "Property" : "Value",
		   "Value" : "{^Value}",
		   "Scenarios": [
		      { "Type":"Neatness",
			    "Name":"Typo", 
			    "Feedback":"Error type: {Name} while entering {^Type}, expected: '{^Value}', found: "
			  },
		      { "Type":"Accuracy",
			    "Name":"Data entry", 
			    "Feedback":"Error type: {Name} while entering {^Type}, expected: '{^Value}', found: "
			  }
			]
         } },
		{  "Date" : {
		   "Name" : "{^Name}",
		   "Text" : "{^Text}",
		   "Type" : "{^ParentName}",
		   "Property" : "Value",
		   "Value" : "{^Value}",
		   "Scenarios": [
		      { "Type":"Neatness",
			    "Name":"Typo", 
			    "Feedback":"Error type: {Name} while entering {^Type}, expected: '{^Value}', found: "
			  },
		      { "Type":"Accuracy",
			    "Name":"Data entry", 
			    "Feedback":"Error type: {Name} while entering {^Type}, expected: '{^Value}', found: "
			  }
			]
         } }
	  ] },
      { "Functions" : [
         { "IF" : {
		      "Name" : "{^Name}",
		      "Text" : "{^Text}",
		      "Type" : "Function: {^ParentName}",
              "Property" : "Formula",
              "Expression" : "=IF({^Logical_test},{^Value_if_true},{^Value_if_false})",
                  "Scenarios" : [
                     {
                        "Answer" : {
                           "Expression" : "=IF({^Logical_test},{^Value_if_true})"
                        },
                        "Custom" : false,
                        "Deduct" : 40,
                        "Feedback" : "false condition omitted, review IF",
                        "Name" : "MissingFalse",
                        "Type" : "Technical"
                     },
                     {
                        "Answer" : {
                           "Expression" : "={^Value_if_true}"
                        },
                        "Custom" : false,
                        "Deduct" : 80,
                        "Feedback" : "Need to use IF, not just enter formula...",
                        "Name" : "NoIf",
                        "Type" : "Conceptual"
                     },
                     {
                        "Answer" : {
                           "Value" : "{^Value}"
                        },
                        "Custom" : false,
                        "Deduct" : 100,
                        "Feedback" : "Never enter the value...",
                        "Name" : "EnteredValue",
                        "Type" : "Conceptual.Literal"
                     }
                  ],
                  "Text" : "{^Text}",
                  "Type" : "Content",
                  "Value" : "{^Value}"
               }
         }, /* if */
         { "SUM" : {
                  "Expression" : "=SUM({^Expression})",
                  "Location" : {
                     "Target" : "{^Cell}",
                     "Path" : "Worksheets[{Worksheet].Cells[{Target}]",
                     "Type" : "Cell",
                     "Worksheets" : "{^Worksheet}"
                  },
                  "Name" : "{^Name}",
                  "Property" : "Formula",
                  "Range" : "{^Range}",
                  "Scenarios" : [
                     {
                        "Answer" : {
                           "Expression" : "={^Expression(1)})"
                        },
                        "Deduct" : 100,
                        "Feedback" : "Sum requires use of function, not just range",
                        "Name" : "Entered the range with no function",
                        "Type" : "Technical"
                     },
                     {
                        "Answer" : {
                           "Value" : "{^Value}"
                        },
                        "Custom" : false,
                        "Deduct" : 100,
                        "Feedback" : "Never enter the value...",
                        "Name" : "EnteredValue",
                        "Type" : "Conceptual.Literal"
                     }
                  ],
                  "Text" : "{^Text}",
                  "Type" : "Content",
                  "Value" : "{^Value}"
               }
         }
      ] },
		/* create stock cell expression json that uses * to dereference-find
		 * location template
		 */
      { "Expressions" : [
         { "Formula" : {
		      "Name" : "{^Name}",
		      "Text" : "{^Text}",
		      "Type" : "{^ParentName}",
              "Property" : "Formula",
              "Expression" : "{^Expression}",
              "Scenarios" : [
		         { "Name":"incorrect formula",
                   "Type":"Technical",
			       "Text":"{Name} entered", 
				   "Answer":"!{^Expression}",
			       "Feedback":"Error type: {Type} - {Text}, expected: '{^Expression}', found: "
			     },
		         { "Name":"correct value",
                   "Type":"Conceptual",
			       "Text":"{Name} entered instead of formula", 
				   "Answer":"{^Value}",
			       "Feedback":"Error type: {Type} - {Text},  {^Type}, expected: '{^Expression}', found: "
			     },
		         { "Name":"incorrect value",
				   "Type":"Conceptual",
			       "Text":"{Name} entered instead of formula", 
				   "Answer":"!{^Value}",
			       "Feedback":"Error type: {Type} - {Text},  {^Type}, expected: '{^Expression}', found: "
			     }
			  ]
         } },
         { "Arithmetic" : {
		      "Name" : "{^Name}",
		      "Text" : "{^Text}",
		      "Type" : "{^ParentName}",
              "Property" : "Formula",
              "Expression" : "{^Expression}",
              "Scenarios" : [
		         { "Name":"incorrect formula",
                   "Type":"Technical",
			       "Text":"{Name} entered", 
				   "Answer":"!{^Expression}",
			       "Feedback":"Error type: {Type} - {Text}, expected: '{^Expression}', found: "
			     },
		         { "Name":"correct value",
                   "Type":"Conceptual",
			       "Text":"{Name} entered instead of formula", 
				   "Answer":"{^Value}",
			       "Feedback":"Error type: {Type} - {Text},  {^Type}, expected: '{^Expression}', found: "
			     },
		         { "Name":"incorrect value",
				   "Type":"Conceptual",
			       "Text":"{Name} entered instead of formula", 
				   "Answer":"!{^Value}",
			       "Feedback":"Error type: {Type} - {Text},  {^Type}, expected: '{^Expression}', found: "
			     }
			  ]
         } }, /*
				 * make sure expression parser/comparison recognizes >=, <=, <>
				 */
         { "Relational" : {
		      "Name" : "{^Name}",
		      "Text" : "{^Text}",
		      "Type" : "{^ParentName}",
              "Property" : "Formula",
              "Expression" : "{^Expression}",
              "Scenarios" : [
		         { "Name":"incorrect formula",
                   "Type":"Technical",
			       "Text":"{Name} entered", 
				   "Answer":"!{^Expression}",
			       "Feedback":"Error type: {Type} - {Text}, expected: '{^Expression}', found: "
			     },
		         { "Name":"correct value",
                   "Type":"Conceptual",
			       "Text":"{Name} entered instead of formula", 
				   "Answer":"{^Value}",
			       "Feedback":"Error type: {Type} - {Text},  {^Type}, expected: '{^Expression}', found: "
			     },
		         { "Name":"incorrect value",
				   "Type":"Conceptual",
			       "Text":"{Name} entered instead of formula", 
				   "Answer":"!{^Value}",
			       "Feedback":"Error type: {Type} - {Text},  {^Type}, expected: '{^Expression}', found: "
			     }
			  ]
         } },
         {
            "CellReference" : {}
         },
         {
            "RangeReference" : {}
         }
      ] }
   ],
   "Formats" : [
	 { "Font" : {
		  "Style" : {
		     "MSO" : "0, 0, 139",
		     "MSOTheme" : "xlThemeColorDark2",
		     "MSOThemeRGB" : "3, 0, 0",
		     "Pattern" : "xlPatternSolid",
		     "RGB" : "148, 138, 84"
		   }
	 }}
	 { "Border": {
	      "LineStyle" : "xlContinuous",
		  "Type" : "^ParentName",
		  "Weight" : "xlThin"
     }},
	 { "Fill" : {
		  "Color" : {
		     "MSO" : "0, 0, 139",
		     "MSOTheme" : "xlThemeColorDark2",
		     "MSOThemeRGB" : "3, 0, 0",
		     "Pattern" : "xlPatternSolid",
		     "RGB" : "148, 138, 84"
		   }
	 }}
   ],
   "Targets" : [
	  { "Workbook": [
		  { "Worksheet" : {
			 "Target" : "{^Target}",
			 "Path" : "Worksheets[{^ParentName}]",
			 "Type" : "{^ParentName}",
			 "Worksheets" : "{^Worksheet}"
		  } },
		  { "Property" : {
			 "Target" : "{^Target}",
			 "Path" : "Worksheets[{^Worksheet}].Properties[{Target}]",
			 "Type" : "{^ParentName}",
			 "Worksheets" : "{^Worksheet}"
		  } }
	  ] },
	  { "Worksheet": [
		  { "Cell" : {
			 "Target" : "{^Target}",
			 "Path" : "Worksheets[{^Worksheet}].Cells[{Target}]",
			 "Type" : "{^ParentName}",
			 "Worksheets" : "{^Worksheet}"
		  }},
		  { "Range" : {
			 "Target" : "{^Target}",
			 "Path" : "Worksheets[{^Worksheet}].Cells[{Target}]",
			 "Type" : "{^ParentName}",
			 "Worksheets" : "{^Worksheet}"
		  }},
		  { "Row" : {
			 "Target" : "{^Target}",
			 "Path" : "Worksheets[{^Worksheet}].Rows[{Target}]",
			 "Type" : "{^ParentName}",
			 "Worksheets" : "{^Worksheet}"
		  }},
		  { "Column" : {
			 "Target" : "{^Target}",
			 "Path" : "Worksheets[{^Worksheet}].Columns[{Target}]",
			 "Type" : "{^ParentName}",
			 "Worksheets" : "{^Worksheet}"
		  } }
	   ]}
    ]
}
