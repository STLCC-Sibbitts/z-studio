{
	"Project": {
		"Name":"NordellEx2IP4",
		"Text":"Just some arbitrary text",
		"TotalPts":50,
		"Allocations": [
			{ "NCE": {
				"Pct":0.10,
				"Max":5,
				"PPE":0.50
			} },
			{ "EE": {
				"Pct":0.15,
				"Max":7.5,
				"PPE":1.0
			} },
			{ "LO": {
				"Pct":0.75,
				"Max":37.5,
				"PPE":1.50
			} }
		],
		"Preferences": {
			"SkillLevels":{"Enabled":true},
			"Coverages":{"Enabled":true},
			"Difficulties":{"Enabled":true},
			"Deductions":{"Enabled":true},
			"PartialCredit":{"Enabled":true},
			"Content2": {
				"Typos":{"Enabled":true, "Threshold":1},
				"Expressions": {
					"AccuracyForRanges":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Inclusion of extraneous/empty cells in ranges should be avoided. Found range: '{0}' in expression: '{1}', does not match the requested range: '{2}'."
						}
					}
				}
			},
			"Content": {
				"Literal": {
					"Typos":{
						"Enabled":true
						, "Threshold":2
						,"Deduction" : {
							"Type" : "Minor",
							"Category" : "NCE"
						}
						,"Remediation": {
							"Category" : "NCE"
							,"PartialCreditFeedback" : "Partial credit given for minor typo, expected: '{0}', found: '{1}'."
							,"Feedback" : "Value entered incorrectly, expected: '{0}', found: '{1}'."
						}
						,"Notes":"This could be an error, a warning or nothing? For now, anything within the threshold is partial credit."
					}
				}
				,"Action": {
					"Copy_Range":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Incomplete copy of range. Partial copying of range, found content copied to: '{0}' instead of: '{1}'."
						}
						,"Notes":"Give partial credit if target range copied to skips cells that would result in a non-displayable value"
					}
				}
				,"Expression": {
					"FunctionArg_RangeBounds":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Inclusion of extraneous/empty cells in ranges should be avoided. Found range: '{0}' in expression: '{1}', does not match the requested range: '{2}'."
						},
						"Notes" : "Might make this function specific or add other criteria later."
					},
					"FunctionArg_DefaultValue_Missing":{
						"Enabled":false,
						"Deduction" : {
							"Type" : "FULL",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Omitted function argument {0}, review {1}"
						},
						"Notes" : "How to treat entry of default values in functions when not requested to do so."
					},
					"FunctionArg_DefaultValue_Found":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "None",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Specifying the {0} was not required, review {1}"
						},
						"Notes" : "How to treat entry of default values in functions when not requested to do so."
					},
					"FunctionArg_NumericLiteral_OutputValue":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Minor",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Requested numeric literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for numeric literals as function arguments. May need to define threshold."
					},
					"FunctionArg_StringLiteral_OutputValue":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Minor",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "NCE",
							"Feedback" : "Requested string literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for string literals as function output arguments."
					},
					"FunctionArg_NumericLiteral":{
						"Enabled":true,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Requested numeric literal value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for numeric literals as input function arguments, provided resulting value is correct."
					},
					"FunctionArg_StringLiteral":{
						"Enabled":true,
						"Threshold":1,
						"Deduction" : {
							"Type" : "Moderate",
							"Category" : "EE"
						},
						"Remediation": {
							"Category" : "EE",
							"Feedback" : "Requested string literal input value '{0}' entered incorrectly '{1}'. "
						},
						"Notes" : "How to treat accuracy for string literals as input function arguments, provided resulting value is correct."
					}
				}
			}
		},
		"Multipliers": {
			"SkillLevels": [
				{"Novice":1.0},
				{"Beginner":1.25},
				{"Intermediate":1.5},
				{"Advanced":1.75},
				{"Expert":2.0}
			],
			"Coverages": [
				{"Review":1.0},
				{"Normal":1.0}
			],
			"Difficulties": [
				{"Easy":   0.5},
				{"Normal":   1.0},
				{"Hard":   1.5},
				{"Challenging":   2.0}
			],
			"Deductions": [
				{"None": 0.0},
				{"Minor":0.25},
				{"Moderate":0.50},
				{"Major":0.75},
				{"Full":1.00}
			]
		}
	},
	"Keys": [
		{"placeHolder":null }
	],
	"Steps":
	[
		{	"12": {	
			"Name":"Step {ParentID}",
			"Key": "{ParentID}",
			"Text":"Format the salary amounts in columns H and J and the “Branch Totals” section to the Accounting style with no symbol.",
			"Tasks":
			[
				{	"a": {
					"Name":"{^Name}{ParentID}",
					"Text":"Format the salary amounts in column H to the Accounting style with no symbol.",
					"Mapping":	{
						"Category":"LO",
						"Difficulty":"Normal",
						"Action":"Apply"
					},
					"Target" : {
						"Text": "{^Text}",
						"Location": {
							"Type" : "Range",
							"Address" : "$H$4:$H$13",
							"Context":"Employees"
						},
						"Type":"Format",
						"Property":"Style"
					},
					"Answer" : {
						"Type": "{^Target.Type}",
						"NumberFormat": {
						  "Name": "Accounting",
						  "Value": "_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)"
						}
					},
					"Scenarios" : 
					[
						{	"Name" : "WithSymbol",
							"Answers" :
							[
								{	"Type": "{^Answer.Type}",
									"NumberFormat": {
									  "Name": "Accounting",
									  "Value": "_($* #,##0.00_);_($* (#,##0.00);_($* \"-\"??_);_(@_)"
									}
								}
							],
							"Deduction" : {
								"Category" : "{^Mapping.Category}",
								"Type":"Moderate"
							},
							"Remediation": {
								"Category" : "{^Mapping.Category}",
								"Feedback" : "Option to include currency symbol is incorrect, none should be selected."
							},
							"Notes" : "look into formats that include decimal places."
						},
						{	"Name" : "MissingDecimals",
							"Answers" :
							[
								{	"Type": "{^Answer.Type}",
									"NumberFormat": {
									  "Name": "Accounting",
                                      "Value": "_(* #,##0_);_(* (#,##0);_(* \"-\"_);_(@_)"
									}
								}
							],
							"Deduction" : {
								"Category" : "{^Mapping.Category}",
								"Type":"Moderate"
							},
							"Remediation": {
								"Category" : "{^Mapping.Category}",
								"Feedback" : "Decimal places should not have been eliminated."
							},
							"Notes" : "look into formats that include decimal places."
						}
						,{	"Name" : "Currency",
							"Answers" :
							[
								{	"Type": "{^Answer.Type}",
									"NumberFormat": {
									  "Name": "Currency",
									  "Value": "$#,##0.00_);($#,##0.00)"
									}
								}
							],
							"Deduction" : {
								"Category" : "{^Mapping.Category}",
								"Type":"Moderate"
							},
							"Remediation": {
								"Category" : "{^Mapping.Category}",
								"Feedback" : "Currency format applied instead of Accounting format."
							},
							"Notes" : "look into formats that include decimal places."
						}
						,{	"Name" : "CurrencyNoSymbol",
							"Answers" :
							[
								{	"Type": "{^Answer.Type}",
									"NumberFormat": {
									  "Name": "Currency",
									  "Value": "#,##0.00_);(#,##0.00)"
									}
								}
							],
							"Deduction" : {
								"Category" : "{^Mapping.Category}",
								"Type":"Moderate"
							},
							"Remediation": {
								"Category" : "{^Mapping.Category}",
								"Feedback" : "Close, but no cigar, Currency format applied instead of Accounting format."
							},
							"Notes" : "look into formats that include decimal places."
						}
					]
				}},
				{	"b": {
					"Name":"{^Name}{ParentID}",
					"Text":"Format the salary amounts in column J to the Accounting style with no symbol.",
					"Mapping":	{
						"Category":"LO",
						"Difficulty":"Normal",
						"Action":"Apply"
					},
					"Target" : {
						"Text": "{^Text}",
						"Location": {
							"Type" : "Range",
							"Address" : "$J$4:$J$13",
							"Context":"Employees"
						},
						"Type":"Format",
						"Property":"Style"
					},
					"Answer" : {
						"Type": "{^Target.Type}",
						"NumberFormat": {
						  "Name": "Accounting",
						  "Value": "_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)"
						}
					},
					"Scenarios" : 
					[
					]
				}},
				{	"c": {
					"Name":"{^Name}{ParentID}",
					"Text":"Format the salary amounts in the “Branch Totals” section to the Accounting style with no symbol.",
					"Mapping":	{
						"Category":"LO",
						"Difficulty":"Normal",
						"Action":"Apply"
					},
					"Target" : {
						"Text": "{^Text}",
						"Location": {
							"Type" : "Range",
							"Address" : "$B$26:$B$28",
							"Context":"Employees"
						},
						"Type":"Format",
						"Property":"Style"
					},
					"Answer" : {
						"Type": "{^Target.Type}",
						"NumberFormat": {
						  "Name": "Accounting",
						  "Value": "_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)"
						}
					},
					"Scenarios" : 
					[
					]
				}}



			]
		}},
		{	"11": {	
			"Name":"Step {ParentID}",
			"Key": "{ParentID}",
			"Text":"Format the data in column I using the Percent Style button.",
			"Tasks":
			[
				{	"-": {
					"Name":"{^Name}{ParentID}",
					"Text":"{^Text}",
					"Mapping":	{
						"Category":"LO",
						"Difficulty":"Normal",
						"Action":"Apply"
					},
					"Target" : {
						"Text": "{^Text}",
						"Location": {
							"Type" : "Range",
							"Address" : "$I$4:$I$13",
							"Context":"Employees"
						},
						"Type":"Format",
						"Property":"Style"
						,"Notes" : "Directions indicated column, but key is actually a range, 'data in Column I'"
					},
					"Answer" : {
						"Type": "{^Target.Type}",
						"Style": {
						  "Name":"Percent"
						},
						"NumberFormat": {
						  "Name": "Percentage",
						  "Value": "0%"
						}
					},
					"Scenarios" : 
					[
					]
				}}

			]
		}},
		{	"02": {	
			"Name":"Step {ParentID}",
			"Key": "{ParentID}",
			"Text":"Select E26 and type Highest Salary.",
			"Tags":[
				{ "0" : ["Select E26	and type	Highest Salary	."]}
			],
			"Tasks":
			[
				{	"-": {
					"Name":"{^Name}{ParentID}",
					"Text":"{^Text}",
					"Mapping":	{
						"Category":"NCE",
						"Difficulty":"Easy",
						"Action":"Create"
					},
					"Target" : {
						"Text": "{^Text}"
						,"Location": {
							"Type" : "Cell"
							,"Address" : "$E$26"
							,"TaggedAddress": ["///<{0,0}$E$26>///"]
							,"Context":"Employees"
							,"TaggedContext": ["///{0,0}Employees>///"]
						}
						,"Type":"Content"
						,"Property":"Text"
					},
					"Answer": { 
						"Type": "{^Target.Type}"
						,"LiteralValue":"Highest Salary"
						,"Expression":"'Highest Salary"
						,"TaggedExpression":["///<{0,2}'Highest Salary>///"]
					},
					"Scenarios" : [ ]
				}}
			]
		}}
		,{	"15": {	
			"Name":"Step {ParentID}",
			"Key": "{ParentID}",
			"Text":"Type Lowest Salary in E27 and Average Salary in E28.",
			"Tags":[
				 { "0" : ["Type 	Lowest Salary	 in 	E27	."]}
				,{ "1" : ["Type 	Average Salary	 in 	E28	."]}
			],
			"Tasks":
			[
				{	"a": {
					 "Name":"{^Name}{ParentID}"
					,"Text":"{^Text}"
					,"Mapping":	{
						"Category":"NCE"
						,"Difficulty":"Easy"
						,"Action":"Create"
					}
					,"Target" : {
						 "Text": "{^Text}"
						,"Location": {
							"Type" : "Cell"
							,"Address" : "$E$27"
							,"TaggedAddress": ["///<{0,3}$E$27>///"]
							,"Context":"Employees"
							,"TaggedContext": ["///{0,0}Employees>///"]
						}
						,"Type":"Content"
						,"Property":"Text"
					}
					,"Answer": { 
						"Type": "{^Target.Type}"
						,"LiteralValue":"Lowest Salary"
						,"Expression":"'Lowest Salary"
						,"TaggedExpression":[ "///<{0}'Lowest Salary>///" ]
					}
					,"Scenarios" : [ ]
				}}
				,{	"b": {
					 "Name":"{^Name}{ParentID}"
					,"Text":"{^Text}"
					,"Mapping":	{
						 "Category":"NCE"
						,"Difficulty":"Easy"
						,"Action":"Create"
					}
					,"Target" : {
						 "Text": "{^Text}"
						,"Location": {
							 "Type" : "Cell"
							,"Address" : "$E$28"
							,"TaggedAddress": ["///<{1,3}$E$28>///"]
							,"Context":"Employees"
							,"TaggedContext": ["///{0,0}Employees>///"]
						}
						,"Type":"Content"
						,"Property":"Text"
					}
					,"Answer": { 
						 "Type": "{^Target.Type}"
						,"LiteralValue":"Average Salary"
						,"Expression":"'Average Salary"
						,"TaggedExpression":[ "///<{1}'Average Salary>///" ]
					}
					,"Scenarios" : [ ]
				}}
			]
		}}

	]
}
